import win.ui;
/*DSG{{*/
mainForm = win.form(text="cmonitor.install.win";right=403;bottom=395;max=false)
mainForm.add(
btnCheck={cls="button";text="检查安装";left=324;top=351;right=393;bottom=374;z=4};
btnHidePassword={cls="button";text="隐藏密码";left=321;top=201;right=382;bottom=224;z=34};
btnInstall={cls="button";text="安装";left=129;top=349;right=189;bottom=379;z=6};
btnRun={cls="button";text="运行";left=205;top=349;right=265;bottom=379;z=14};
btnSaveConfig={cls="button";text="保存";left=210;top=202;right=248;bottom=225;z=35};
btnShowPassword={cls="button";text="显示密码";left=255;top=202;right=316;bottom=225;z=33};
cbClient={cls="checkbox";text="客户端";left=72;top=17;right=133;bottom=36;tabstop=1;z=19};
cbService={cls="checkbox";text="服务端";left=262;top=17;right=327;bottom=35;tabstop=1;z=20};
editApiClientPassword={cls="edit";left=74;top=199;right=174;bottom=221;edge=1;password=1;tabstop=1;z=25};
editApiClientPort={cls="edit";left=74;top=168;right=174;bottom=190;edge=1;tabstop=1;z=24};
editApiPassword={cls="edit";left=273;top=135;right=373;bottom=157;edge=1;password=1;tabstop=1;z=28};
editApiPort={cls="edit";left=273;top=105;right=373;bottom=127;edge=1;tabstop=1;z=27};
editMachineName={cls="edit";left=74;top=75;right=174;bottom=97;edge=1;tabstop=1;z=21};
editServer={cls="edit";left=74;top=105;right=174;bottom=127;edge=1;tabstop=1;z=22};
editServicePort={cls="edit";left=273;top=168;right=373;bottom=190;edge=1;tabstop=1;z=29};
editShareKey={cls="edit";left=72;top=271;right=172;bottom=290;edge=1;tabstop=1;z=30};
editShareLength={cls="edit";left=72;top=297;right=172;bottom=319;edge=1;tabstop=1;z=31};
editShareSize={cls="edit";left=273;top=295;right=373;bottom=317;edge=1;tabstop=1;z=32};
editWebClientPort={cls="edit";left=74;top=136;right=174;bottom=158;edge=1;tabstop=1;z=23};
editWebPort={cls="edit";left=273;top=75;right=373;bottom=97;edge=1;tabstop=1;z=26};
groupbox={cls="groupbox";text="客户端参数";left=13;top=44;right=196;bottom=236;edge=1;z=9};
groupbox2={cls="groupbox";text="服务端参数";left=200;top=46;right=393;bottom=236;edge=1;z=8};
groupbox3={cls="groupbox";text="共享数据";left=13;top=241;right=393;bottom=332;edge=1;z=2};
static={cls="static";text="机器名";left=24;top=79;right=69;bottom=101;transparent=1;z=13};
static10={cls="static";text="web端口";left=20;top=139;right=70;bottom=164;transparent=1;z=11};
static11={cls="static";text="管理端口";left=17;top=172;right=71;bottom=194;transparent=1;z=3};
static12={cls="static";text="管理密码";left=17;top=203;right=71;bottom=225;transparent=1;z=18};
static13={cls="static";text="管理密码";left=210;top=139;right=264;bottom=161;transparent=1;z=17};
static2={cls="static";text="服务器";left=23;top=108;right=69;bottom=133;transparent=1;z=15};
static3={cls="static";text="web端口";left=213;top=79;right=267;bottom=101;transparent=1;z=7};
static4={cls="static";text="管理端口";left=210;top=109;right=264;bottom=131;transparent=1;z=5};
static5={cls="static";text="服务端口";left=210;top=172;right=266;bottom=194;transparent=1;z=1};
static7={cls="static";text="键名";left=30;top=271;right=61;bottom=293;transparent=1;z=16};
static8={cls="static";text="个数";left=28;top=301;right=58;bottom=323;transparent=1;z=10};
static9={cls="static";text="每项长度";left=208;top=299;right=266;bottom=321;transparent=1;z=12}
)
/*}}*/

import process.mutex;
mainForm.mutex = process.mutex(mainForm.text) 
if( mainForm.mutex.conflict ){
    import win.ui.atom;
    var atom,hwndConflict = win.ui.atom.find(mainForm.text)
    if( hwndConflict ) win.setForeground(hwndConflict);
    return;
}

mainForm.serviceName = "cmonitor.sas.service";
mainForm.exeName = "cmonitor.sas.service.exe";
import dotNet;
dotNet.import("System");
var defaultConfig = {	
  "Client": {
    "Server": "127.0.0.1:1802",
    "Name":string.slice(System.Net.Dns.GetHostName(),1,12),
    "GroupId": "snltty",
    "ShareMemoryKey": "cmonitor/share",
    "ShareMemoryCount": 100,
    "ShareMemorySize": 1024,
    "ApiPort": 1803,
    "ApiPassword": "snltty",
    "WebPort": 1804
  },
  "Common": {
    "Modes": {"client","server"}
  },
  "Server": {
    "WebPort": 1800,
    "ApiPort": 1801,
    "ServicePort": 1802,
    "ApiPassword": "snltty"
  }
};


import win.image;
hIcon = win.image.loadIconFromFile("/res/favicon.ico",true);
hIcon1 = win.image.loadIconFromFile("/res/favicon1.ico",true);
mainForm.myTray = null;
mainForm.wndproc = function(hwnd,message,wParam,lParam){
		//托盘菜单
		if(message === 0xACCF ){
			//右键
			if( lParam === 0x205){
				
    			var pt = ::POINT();
        		::User32.GetCursorPos(pt);
        		win.setForeground(mainForm.hwnd)
        		mainForm.popmenu.popup(pt.x,pt.y,true );
        		
			} 
			//左键
			if(lParam === 0x0202){
				mainForm.show();
			} 
		}
		//关闭
		if(message === 0x10){
			mainForm.show(false);
			return 0;
		}
}
mainForm.showPopmenu = function(){
	import win.util.tray;
	import win.ui.menu;
	import service;
	
	if(mainForm.myTray != null){
		mainForm.myTray.delete();
		mainForm.myTray = null;
	}
	tray = win.util.tray(mainForm);
	mainForm.myTray = tray;
	if(service.isRunning(mainForm.serviceName))
	{
		tray.icon = hIcon; 
	}else
	{
		tray.icon = hIcon1; 
	}
	tray.tip = mainForm.text;
	tray.message = 0xACCF;
	mainForm.popmenu=win.ui.popmenu(mainForm);
	
	mainForm.popmenu.add(service.isRunning(mainForm.serviceName) ? '停止服务':'运行服务',function(id){mainForm.installCommand()});
	mainForm.popmenu.add(service.isExist(mainForm.serviceName) ? '卸载服务':'安装服务',function(id){mainForm.installCommand()});
	mainForm.popmenu.add('退出托盘',function(id){
		win.quitMessage();
   		mainForm.close();
	});
}


mainForm.loadConfig = function(){
	import web.json;
	var configJson = defaultConfig;
	try{
		
		jsonText = string.load(io.fullpath("configs/config.json"));
		if(jsonText == null || string.len(jsonText) == 0)
		{
			return;
		}
		configJson = web.json.parse(jsonText);
	}
	return configJson;
}
mainForm.saveConfig = function(){
	import web.json;
	import win.ui;
	var result = false;
	try{
		mainForm.readConfigFromControll();
		if(string.len(mainForm.editMachineName.text)>12)
		{
			win.msgbox("机器名最多12字符");
			return;
		}
		if(string.len(mainForm.editApiClientPassword.text)>16)
		{
			win.msgbox("管理密码最多16字符");
			return;
		}
		if(string.len(mainForm.editApiPassword.text)>16)
		{
			win.msgbox("管理密码最多16字符");
			return;
		}
		
		path = io.fullpath("./configs/config.json");
		string.save(path,web.json.stringify(mainForm.configJson,true));
		result = true;
		
	}catch(e){
		result = false;
	}
	return result;
}
mainForm.bindConfig2Controll = function(){
	mainForm.cbClient.checked = table.indexOf( mainForm.configJson["Common"]["Modes"],"client") >= 1;
	mainForm.cbService.checked = table.indexOf( mainForm.configJson["Common"]["Modes"],"server") >= 1;
	
	mainForm.editMachineName.text = mainForm.configJson["Client"]["Name"] || defaultConfig["Client"]["Name"];
	mainForm.editServer.text = mainForm.configJson["Client"]["Server"] || defaultConfig["Client"]["Server"];
	mainForm.editWebClientPort.text = mainForm.configJson["Client"]["WebPort"] || defaultConfig["Client"]["WebPort"];
	mainForm.editApiClientPort.text = mainForm.configJson["Client"]["ApiPort"] || defaultConfig["Client"]["ApiPort"];
	mainForm.editApiClientPassword.text = mainForm.configJson["Client"]["ApiPassword"] || defaultConfig["Client"]["ApiPassword"];
	
	mainForm.editShareKey.text = mainForm.configJson["Client"]["ShareMemoryKey"] || defaultConfig["Client"]["ShareMemoryKey"];
	mainForm.editShareLength.text = mainForm.configJson["Client"]["ShareMemoryCount"] || defaultConfig["Client"]["ShareMemoryCount"];
	mainForm.editShareSize.text = mainForm.configJson["Client"]["ShareMemorySize"] || defaultConfig["Client"]["ShareMemorySize"];
	
	mainForm.editWebPort.text = mainForm.configJson["Server"]["WebPort"] || defaultConfig["Server"]["WebPort"];
	mainForm.editApiPort.text = mainForm.configJson["Server"]["ApiPort"] || defaultConfig["Server"]["ApiPort"];
	mainForm.editServicePort.text = mainForm.configJson["Server"]["ServicePort"] || defaultConfig["Server"]["ServicePort"];
	mainForm.editApiPassword.text = mainForm.configJson["Server"]["ApiPassword"] || defaultConfig["Server"]["ApiPassword"];
}
mainForm.readConfigFromControll = function(){
	modes = {};
	if(mainForm.cbClient.checked) table.push(modes,"client");
	if(mainForm.cbService.checked) table.push(modes,"server");
	mainForm.configJson["Common"]["Modes"] = modes;
	
	mainForm.configJson["Client"]["Name"] = mainForm.editMachineName.text;
	mainForm.configJson["Client"]["Server"] = mainForm.editServer.text;
	mainForm.configJson["Client"]["WebPort"] = tonumber(mainForm.editWebClientPort.text);
	mainForm.configJson["Client"]["ApiPort"] = tonumber(mainForm.editApiClientPort.text);
	mainForm.configJson["Client"]["ApiPassword"] = mainForm.editApiClientPassword.text;
	
	mainForm.configJson["Client"]["ShareMemoryKey"] = mainForm.editShareKey.text;
	mainForm.configJson["Client"]["ShareMemoryCount"] = tonumber(mainForm.editShareLength.text);
	mainForm.configJson["Client"]["ShareMemorySize"] = tonumber(mainForm.editShareSize.text);
	
	mainForm.configJson["Server"]["WebPort"] = tonumber(mainForm.editWebPort.text);
	mainForm.configJson["Server"]["ApiPort"] = tonumber(mainForm.editApiPort.text);
	mainForm.configJson["Server"]["ServicePort"] = tonumber(mainForm.editServicePort.text);
	mainForm.configJson["Server"]["ApiPassword"] = mainForm.editApiPassword.text;
	
}

mainForm.showPassword = function(){
	::SendMessageInt(mainForm.editApiClientPassword.hwnd, 0xCC/*_EM_SETPASSWORDCHAR*/, 0, 0);
	::SendMessageInt(mainForm.editApiPassword.hwnd, 0xCC/*_EM_SETPASSWORDCHAR*/, 0, 0);
	mainForm.editApiClientPassword.setFocus()
	mainForm.editApiPassword.setFocus()
}
mainForm.hidePassword = function(){
	::SendMessageInt(mainForm.editApiClientPassword.hwnd, 0xCC/*_EM_SETPASSWORDCHAR*/, '*'#, 0);
	::SendMessageInt(mainForm.editApiPassword.hwnd, 0xCC/*_EM_SETPASSWORDCHAR*/, '*'#, 0);
	mainForm.editApiClientPassword.setFocus()
	mainForm.editApiPassword.setFocus()
}
mainForm.btnHidePassword.oncommand = function(){
	mainForm.hidePassword();
}
mainForm.btnShowPassword.oncommand = function(){
	mainForm.showPassword();
}


mainForm.checkService = function(){
	import service;
	mainForm.btnInstall.text = service.isExist(mainForm.serviceName) ? "卸载" : "安装";
	mainForm.btnRun.text = service.isRunning(mainForm.serviceName) ? "停止" : "运行";
	mainForm.showPopmenu();
}
mainForm.btnCheck.oncommand = function(id,event){
	mainForm.checkService();
	win.msgbox('已检查');
}
mainForm.runCommand = function(id,event){
	import thread;
	thread.invoke( 
		function(mainForm){
			import service;
			import win.ui;
			try{
				mainForm.saveConfig();
				mainForm.btnRun.text = '....';
				if(service.isRunning(mainForm.serviceName)){
					if(service.stop(mainForm.serviceName,true)){
						
					}else{
						win.msgbox("停止失败");	
					}
				}else{
					if(service.start(mainForm.serviceName)){
					}else{
						win.msgbox("运行失败");	
					}
				}
				mainForm.checkService();	
			}catch(e){
			}
		},mainForm
	);
}
mainForm.btnRun.oncommand = function(){
	mainForm.runCommand();
}


mainForm.installCommand = function(id,event){
	import thread;
	thread.invoke( 
		function(mainForm){
			import service;
			import win.ui;
			try{
				mainForm.saveConfig();
				mainForm.btnInstall.text = '....';
				if(service.isExist(mainForm.serviceName)){
					if(service.delete(mainForm.serviceName)){
						
					}else{
						win.msgbox("卸载失败");	
					}
				}else{
					if(service.create(io.fullpath(mainForm.exeName),mainForm.serviceName,mainForm.serviceName,mainForm.serviceName)){
					}else{
						win.msgbox("安装失败");	
					}
				}
				mainForm.checkService();	
			}catch(e){
			}
		},mainForm
	);
}
mainForm.btnInstall.oncommand = function(){
	mainForm.installCommand();
}

mainForm.btnSaveConfig.oncommand = function(id,event){
	if(mainForm.saveConfig()){
		win.msgbox('已保存');
	}else{
		win.msgbox("保存失败~请先停止服务后重新尝试保存");
	}
}

mainForm.configJson = mainForm.loadConfig();
mainForm.bindConfig2Controll();
mainForm.checkService();
mainForm.saveConfig();
mainForm.showPopmenu();

mainForm.show();
return win.loopMessage();